name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Run unit tests
      run: npm test

    - name: Setup Xvfb for VS Code tests (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb

    - name: Run VS Code extension tests
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          xvfb-run -a npm run test:vscode
        else
          npm run test:vscode
        fi

    - name: Run performance benchmarks
      run: npm run test:performance
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18.x'

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18.x'

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build extension
      run: npm run compile

    - name: Package extension
      run: npm run package

    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: evtx-viewer-vsix
        path: '*.vsix'

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

    - name: Run security vulnerability tests
      run: npm run test:security
      if: always()

  constitutional-compliance:
    name: Constitutional Compliance Check
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run constitutional compliance tests
      run: |
        npm run test:performance
        npm run test:security
        npm run test:accessibility
        
    - name: Validate code quality standards
      run: |
        npm run lint
        npx tsc --noEmit
        
    - name: Check test coverage
      run: |
        npm test
        npx nyc check-coverage --lines 80 --functions 80 --branches 80 --statements 80

  release:
    name: Release Extension
    runs-on: ubuntu-latest
    needs: [build, security, constitutional-compliance]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download VSIX artifact
      uses: actions/download-artifact@v4
      with:
        name: evtx-viewer-vsix

    - name: Semantic Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
      run: |
        if [ -n "$VSCE_PAT" ]; then
          npm run deploy
        else
          echo "Skipping VS Code Marketplace publish - VSCE_PAT not configured"
        fi